/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parkir;

import static java.lang.String.format;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class frmMain extends javax.swing.JFrame {
    private DefaultTableModel model = new DefaultTableModel();
    String tglmasuk;
    
    private void TglPinjamPropertyChange(java.beans.PropertyChangeEvent evt){
        if(DateMasuk.getDate()!=null){
        SimpleDateFormat Format=new SimpleDateFormat("dd-MM-YYYY");
        tglmasuk=Format.format(DateMasuk.getDate());
        
        }
    }
   
    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtJamMasuk = new javax.swing.JTextField();
        txtNopol = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtNo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        btnMotor = new javax.swing.JRadioButton();
        btnMobil = new javax.swing.JRadioButton();
        DateMasuk = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNo2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtNopol2 = new javax.swing.JTextField();
        txtJenis = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtJamMasuk2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtTglMasuk2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtJamKeluar = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnSimpan1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        btnRefresh1 = new javax.swing.JButton();
        btnClear1 = new javax.swing.JButton();
        btnEdit1 = new javax.swing.JButton();
        btnQuit1 = new javax.swing.JButton();
        DateKeluar = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        jPanel5.setLayout(null);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(null);

        jLabel13.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel13.setText("JAM MASUK");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(20, 230, 100, 20);

        txtJamMasuk.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtJamMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamMasukActionPerformed(evt);
            }
        });
        jPanel1.add(txtJamMasuk);
        txtJamMasuk.setBounds(130, 230, 150, 30);

        txtNopol.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtNopol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNopolActionPerformed(evt);
            }
        });
        jPanel1.add(txtNopol);
        txtNopol.setBounds(130, 60, 150, 30);

        jLabel15.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel15.setText("TGL MASUK");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(20, 190, 130, 20);

        jLabel16.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel16.setText("JENIS");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(20, 110, 130, 20);

        jLabel17.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel17.setText("NO POLISI");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(20, 70, 130, 20);

        jLabel18.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel18.setText("NO TIKET");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(20, 20, 90, 20);

        txtNo.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoActionPerformed(evt);
            }
        });
        jPanel1.add(txtNo);
        txtNo.setBounds(130, 20, 150, 30);

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NO TIKET", "NO POLISI", "JENIS", "TGL MASUK", "JAM MASUK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setHeaderValue("JENIS");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("TGL MASUK");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("JAM MASUK");
        }

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(310, 20, 460, 200);

        btnSimpan.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnSimpan.setText("SAVE");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(btnSimpan);
        btnSimpan.setBounds(40, 310, 110, 40);

        btnDelete.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);
        btnDelete.setBounds(40, 350, 110, 40);

        btnRefresh.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnRefresh.setText("REFRESH");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(btnRefresh);
        btnRefresh.setBounds(180, 350, 110, 40);

        btnClear.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear);
        btnClear.setBounds(180, 310, 110, 40);

        btnEdit.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit);
        btnEdit.setBounds(320, 310, 110, 40);

        btnQuit.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnQuit.setText("QUIT");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });
        jPanel1.add(btnQuit);
        btnQuit.setBounds(320, 350, 110, 40);

        buttonGroup1.add(btnMotor);
        btnMotor.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        btnMotor.setText("Motor");
        jPanel1.add(btnMotor);
        btnMotor.setBounds(130, 110, 73, 29);

        buttonGroup1.add(btnMobil);
        btnMobil.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        btnMobil.setText("Mobil");
        jPanel1.add(btnMobil);
        btnMobil.setBounds(130, 140, 65, 29);
        jPanel1.add(DateMasuk);
        DateMasuk.setBounds(130, 190, 150, 30);

        jTabbedPane1.addTab("INPUT KENDARAAN MASUK", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setLayout(null);

        jLabel10.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel10.setText("NO TIKET");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(20, 20, 90, 20);

        txtNo2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNo2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtNo2);
        txtNo2.setBounds(130, 20, 150, 30);

        jLabel19.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel19.setText("NO POLISI");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(20, 80, 90, 20);

        txtNopol2.setEditable(false);
        txtNopol2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtNopol2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNopol2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtNopol2);
        txtNopol2.setBounds(130, 80, 150, 30);

        txtJenis.setEditable(false);
        txtJenis.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisActionPerformed(evt);
            }
        });
        jPanel2.add(txtJenis);
        txtJenis.setBounds(130, 120, 150, 30);

        jLabel20.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel20.setText("JENIS");
        jPanel2.add(jLabel20);
        jLabel20.setBounds(20, 120, 130, 20);

        jLabel21.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel21.setText("JAM MASUK");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(20, 200, 100, 20);

        txtJamMasuk2.setEditable(false);
        txtJamMasuk2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtJamMasuk2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamMasuk2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtJamMasuk2);
        txtJamMasuk2.setBounds(130, 200, 150, 30);

        jLabel22.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel22.setText("TGL MASUK");
        jPanel2.add(jLabel22);
        jLabel22.setBounds(20, 160, 100, 20);

        txtTglMasuk2.setEditable(false);
        txtTglMasuk2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtTglMasuk2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglMasuk2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtTglMasuk2);
        txtTglMasuk2.setBounds(130, 160, 150, 30);

        jLabel23.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel23.setText("TGL KELUAR");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(320, 80, 130, 20);

        jLabel14.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel14.setText("JAM KELUAR");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(320, 120, 100, 20);

        txtHarga.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });
        jPanel2.add(txtHarga);
        txtHarga.setBounds(430, 160, 150, 30);

        jLabel24.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jLabel24.setText("HARGA");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(320, 160, 100, 20);

        jButton1.setFont(new java.awt.Font("KG Blank Space Solid", 0, 14)); // NOI18N
        jButton1.setText("CARI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(310, 20, 100, 40);

        txtJamKeluar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtJamKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamKeluarActionPerformed(evt);
            }
        });
        jPanel2.add(txtJamKeluar);
        txtJamKeluar.setBounds(430, 120, 150, 30);

        jTable2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NO TIKET", "NO POLISI", "JENIS", "TGL MASUK", "JAM MASUK", "TGL KELUAR", "JAM KELUAR", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(10, 310, 760, 220);

        btnSimpan1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnSimpan1.setText("SAVE");
        btnSimpan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnSimpan1);
        btnSimpan1.setBounds(320, 210, 110, 40);

        btnDelete1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnDelete1.setText("DELETE");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete1);
        btnDelete1.setBounds(320, 250, 110, 40);

        btnRefresh1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnRefresh1.setText("REFRESH");
        btnRefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnRefresh1);
        btnRefresh1.setBounds(460, 250, 110, 40);

        btnClear1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnClear1.setText("CLEAR");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear1);
        btnClear1.setBounds(460, 210, 110, 40);

        btnEdit1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnEdit1.setText("EDIT");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnEdit1);
        btnEdit1.setBounds(600, 210, 110, 40);

        btnQuit1.setFont(new java.awt.Font("Porky's", 0, 18)); // NOI18N
        btnQuit1.setText("QUIT");
        btnQuit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuit1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnQuit1);
        btnQuit1.setBounds(600, 250, 110, 40);
        jPanel2.add(DateKeluar);
        DateKeluar.setBounds(430, 80, 150, 30);

        jTabbedPane1.addTab("INPUT KENDARAAN KELUAR", jPanel2);

        jPanel5.add(jTabbedPane1);
        jTabbedPane1.setBounds(160, 80, 790, 570);
        jTabbedPane1.getAccessibleContext().setAccessibleName("INPUT KENDARAAN MASUK");

        jLabel1.setFont(new java.awt.Font("KG Blank Space Solid", 0, 24)); // NOI18N
        jLabel1.setText("DATA PARKIR KENDARAAN");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(350, 20, 350, 40);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(-150, 0, 1010, 670);

        getAccessibleContext().setAccessibleName("INPUT KENDARAAN KELUAR");

        setSize(new java.awt.Dimension(844, 703));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNo2ActionPerformed

    private void txtJamMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamMasukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamMasukActionPerformed

    private void txtNopolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNopolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNopolActionPerformed

    private void txtNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoActionPerformed

    private void txtNopol2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNopol2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNopol2ActionPerformed

    private void txtJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisActionPerformed

    private void txtJamMasuk2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamMasuk2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamMasuk2ActionPerformed

    private void txtTglMasuk2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglMasuk2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglMasuk2ActionPerformed

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int baris = jTable1.getSelectedRow();
        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        Date dateValue = null;
        try {
            dateValue = date.parse((String) jTable1.getValueAt(baris, 3));
        } catch (ParseException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (baris != 1) {
            txtNo.setText(jTable1.getValueAt(baris, 0).toString());
            txtNopol.setText(jTable1.getValueAt(baris, 1).toString());
            if ("Motor".equals(jTable1.getValueAt(baris, 2).toString())) {
                btnMotor.setSelected(true);
            } else {
                btnMobil.setSelected(true);
            }
            
            DateMasuk.setDate(dateValue);
           
            txtJamMasuk.setText(jTable1.getValueAt(baris, 4).toString());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

  
    
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if ("".equals(txtNo.getText()) || "".equals(txtNopol.getText()) ||"".equals(DateMasuk.getDate()) || "".equals(txtJamMasuk.getText())) {
            jOptionPane1.showMessageDialog(this, "Harap Lengkapi Data", "Error", jOptionPane1.WARNING_MESSAGE);
        } else {
            String jenis = "";
                if (btnMotor.isSelected()) {
                    jenis = "Motor";
                } else {
                    jenis = "Mobil";
                }
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
            String tgl = date.format(DateMasuk.getDate());
            
            String SQL = "INSERT INTO t_kendaraan " + "VALUES('" + txtNo.getText() + "','" + txtNopol.getText() + "', '" + jenis + "','"+tgl+"','"+txtJamMasuk.getText()+"')";
            int status = KoneksiDB.execute(SQL);
            if (status == 1){
                jOptionPane1.showMessageDialog(this, "Data berhasil ditambahkan", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
                selectData();
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal ditambahkan", "Sukses", jOptionPane1.WARNING_MESSAGE);
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpanActionPerformed

     public void selectData(){
        String kolom[] = {"no_tiket","no_polisi","jenis","tgl_masuk","jam_masuk"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);
        String SQL = "SELECT * FROM t_kendaraan";
        ResultSet rs = KoneksiDB.executeQuery(SQL);
        
        try {
            while(rs.next()){
                String no_tiket = rs.getString(1);
                String no_polisi = rs.getString(2);
                String jenis = "";
                if ("Motor".equals(rs.getString(3))) {
                    jenis = "Motor";
                } else {
                    jenis = "Mobil";
                }
                String tgl_masuk = rs.getString(4);
                String jam_masuk = rs.getString(5);
                String data[] = {no_tiket,no_polisi,jenis,tgl_masuk,jam_masuk};
                dtm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(dtm);
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int baris = jTable1.getSelectedRow();
        if(baris != -1) {
            String no_tiket = jTable1.getValueAt(baris, 0).toString();
            String SQL = "DELETE FROM t_kendaraan WHERE no_tiket='"+no_tiket+"'";
            int status = KoneksiDB.execute(SQL);
            if (status == 1) {
                jOptionPane1.showMessageDialog(this, "Data berhasil dihapus", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal dihapus", "Gagal", jOptionPane1.WARNING_MESSAGE);
            }
        } else {
            jOptionPane1.showMessageDialog(this, "Pilih Baris Data Terlebih Dahulu", "Error", jOptionPane1.WARNING_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        selectData();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtNo.setText("");
        txtNopol.setText("");
        txtJamMasuk.setText("");
        DateMasuk.setDate(null);
        buttonGroup1.clearSelection();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if ("".equals(txtNo.getText()) || "".equals(txtNopol.getText()) || "".equals(tglmasuk) || "".equals(txtJamMasuk.getText())) {
            jOptionPane1.showMessageDialog(this, "Harap Lengkapi Data", "Error", jOptionPane1.WARNING_MESSAGE);
        } else {
            String jenis = "";
            if (btnMotor.isSelected()) {
                jenis = "Motor";
            } else {
                jenis = "Mobil";
            }
            
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-YYYY");
            String tgl = date.format(DateMasuk.getDate());
            
            String SQL = "UPDATE t_kendaraan SET "
            + "no_tiket='"+txtNo.getText()+"', "
            + "no_polisi='"+txtNopol.getText()+"', "
            + "jenis='"+jenis+"', "       
            + "tgl_masuk='"+tgl+"', "
            
            + "jam_masuk='"+txtJamMasuk.getText()+"' WHERE no_tiket='"+txtNo.getText()+"'";
            int status = KoneksiDB.execute(SQL);
            if (status == 1) {
                jOptionPane1.showMessageDialog(this, "Data berhasil diupdate", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
                selectData();
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal diupdate", "Sukses", jOptionPane1.WARNING_MESSAGE);
            }
        }
        // TODO add your handling code here:

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnQuitActionPerformed

    private void txtJamKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamKeluarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamKeluarActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int baris = jTable2.getSelectedRow();
        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        Date dateValue2 = null;
        try {
            dateValue2 = date.parse((String) jTable2.getValueAt(baris, 5));
        } catch (ParseException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (baris != 1) {
            txtNo2.setText(jTable2.getValueAt(baris, 0).toString());
            txtNopol2.setText(jTable2.getValueAt(baris, 1).toString());
            txtJenis.setText(jTable2.getValueAt(baris, 2).toString());
            txtTglMasuk2.setText(jTable2.getValueAt(baris, 3).toString());
            txtJamMasuk2.setText(jTable2.getValueAt(baris, 4).toString());
            DateKeluar.setDate(dateValue2);
            txtJamKeluar.setText(jTable2.getValueAt(baris, 6).toString());
            txtHarga.setText(jTable2.getValueAt(baris, 7).toString());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void btnSimpan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan1ActionPerformed
        if ("".equals(DateKeluar.getDate()) || "".equals(txtJamKeluar.getText())) {
            jOptionPane1.showMessageDialog(this, "Harap Lengkapi Data", "Error", jOptionPane1.WARNING_MESSAGE);
        } else {
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
            String tgl2 = date.format(DateKeluar.getDate());
            
            String SQL = "INSERT INTO t_keluar " + "VALUES('" + txtNo2.getText() + "','" + txtNopol2.getText() + "','" + txtJenis.getText() + "','"+txtTglMasuk2.getText()+"','"+txtJamMasuk2.getText()+"','" + tgl2 + "','" + txtJamKeluar.getText() + "','"+txtHarga.getText()+"')";
            int status = KoneksiDB.execute(SQL);
            if (status == 1){
                jOptionPane1.showMessageDialog(this, "Data berhasil ditambahkan", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
                selectData();
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal ditambahkan", "Sukses", jOptionPane1.WARNING_MESSAGE);
            }
            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpan1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        int baris = jTable2.getSelectedRow();
        if(baris != -1) {
            String no_tiket = jTable2.getValueAt(baris, 0).toString();
            String SQL = "DELETE FROM t_keluar WHERE no_tiket='"+no_tiket+"'";
            int status = KoneksiDB.execute(SQL);
            if (status == 1) {
                jOptionPane1.showMessageDialog(this, "Data berhasil dihapus", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal dihapus", "Gagal", jOptionPane1.WARNING_MESSAGE);
            }
        } else {
            jOptionPane1.showMessageDialog(this, "Pilih Baris Data Terlebih Dahulu", "Error", jOptionPane1.WARNING_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh1ActionPerformed
        selectData2();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefresh1ActionPerformed

    public void selectData2(){
        String kolom[] = {"no_tiket","no_polisi","jenis","tgl_masuk","jam_masuk","tgl_keluar","jam_keluar","harga"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom);
        String SQL = "SELECT * FROM t_keluar";
        ResultSet rs = KoneksiDB.executeQuery(SQL);
        try {
            while(rs.next()){
                String no_tiket = rs.getString(1);
                String no_polisi = rs.getString(2);
                String jenis = rs.getString(3);
                String tgl_masuk = rs.getString(4);
                String jam_masuk = rs.getString(5);
                String tgl_keluar = rs.getString(6);
                String jam_keluar = rs.getString(7);
                String harga = rs.getString(8);
                String data[] = {no_tiket,no_polisi,jenis,tgl_masuk,jam_masuk,tgl_keluar,jam_keluar,harga};
                dtm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable2.setModel(dtm);
    }
          
    
    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        txtNo2.setText("");
        txtNopol2.setText("");
        txtJenis.setText("");
        txtJamMasuk2.setText("");
        txtTglMasuk2.setText("");
        DateKeluar.setDate(null);
        txtJamKeluar.setText("");
        txtHarga.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        if ("".equals(txtNo2.getText()) || "".equals(txtNopol2.getText()) || "".equals(txtJenis.getText()) || "".equals(txtTglMasuk2.getText()) || "".equals(txtJamMasuk2.getText()) || "".equals(DateKeluar.getDate()) || "".equals(txtJamKeluar.getText())|| "".equals(txtHarga.getText())) {
            jOptionPane1.showMessageDialog(this, "Harap Lengkapi Data", "Error", jOptionPane1.WARNING_MESSAGE);
        } else {
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-YYYY");
            String tgl2 = date.format(DateKeluar.getDate());
            
            String SQL = "UPDATE t_keluar SET "
            + "no_tiket='"+txtNo2.getText()+"', "
            + "no_polisi='"+txtNopol.getText()+"', "
            + "jenis='"+txtJenis.getText()+"', "
            + "tgl_masuk='"+txtTglMasuk2.getText()+"', "
            + "jam_masuk='"+txtJamMasuk2.getText()+"', "
            + "tgl_keluar='"+tgl2+"', "
            + "jam_keluar='"+txtJamKeluar.getText()+"', "
            + "harga='"+txtHarga.getText()+"' WHERE no_tiket='"+txtNo2.getText()+"'";
            int status = KoneksiDB.execute(SQL);
            if (status == 1) {
                jOptionPane1.showMessageDialog(this, "Data berhasil diupdate", "Sukses", jOptionPane1.INFORMATION_MESSAGE);
                selectData();
            } else {
                jOptionPane1.showMessageDialog(this, "Data gagal diupdate", "Sukses", jOptionPane1.WARNING_MESSAGE);
            }
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void btnQuit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuit1ActionPerformed
        dispose();
            // TODO add your handling code here:
    }//GEN-LAST:event_btnQuit1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
           
            String SQL = "SELECT * FROM t_kendaraan WHERE no_tiket='"+txtNo2.getText()+"'";
            ResultSet rs = KoneksiDB.executeQuery(SQL);
            while (rs.next()) {
                txtNopol2.setText(rs.getString(2));
                txtJenis.setText(rs.getString(3));
                txtTglMasuk2.setText(rs.getString(4));
                txtJamMasuk2.setText(rs.getString(5));
              
            }
            
            
           
        } catch (Exception e){
        }       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateKeluar;
    private com.toedter.calendar.JDateChooser DateMasuk;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JRadioButton btnMobil;
    private javax.swing.JRadioButton btnMotor;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnQuit1;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnSimpan1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtJamKeluar;
    private javax.swing.JTextField txtJamMasuk;
    private javax.swing.JTextField txtJamMasuk2;
    private javax.swing.JTextField txtJenis;
    private javax.swing.JTextField txtNo;
    private javax.swing.JTextField txtNo2;
    private javax.swing.JTextField txtNopol;
    private javax.swing.JTextField txtNopol2;
    private javax.swing.JTextField txtTglMasuk2;
    // End of variables declaration//GEN-END:variables

    private Date getTanggalFromTable(JTable jTable1, int i) {
        JTable tabel = jTable1;
        String str_tgl = String.valueOf(tabel.getValueAt(tabel.getSelectedRow(), i));
        Date tanggal = null;
        try {
            tanggal = new SimpleDateFormat("dd-MM-YYY").parse(str_tgl);
        } catch (ParseException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tanggal;
     //To change body of generated methods, choose Tools | Templates.
    }
}
